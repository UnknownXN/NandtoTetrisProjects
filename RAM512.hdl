// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    And(a=load, b=true, out=LoadIt);
    DMux8Way(in=LoadIt, sel=address[6..8], a=addressA, b=addressB, c=addressC, d=addressD, e=addressE, f=addressF, g=addressG, h=addressH);
    
    RAM64(in=in[0..15], load=addressA, address=address[0..5], out=zero);
    RAM64(in=in[0..15], load=addressB, address=address[0..5], out=one);
    RAM64(in=in[0..15], load=addressC, address=address[0..5], out=two);
    RAM64(in=in[0..15], load=addressD, address=address[0..5], out=three);
    RAM64(in=in[0..15], load=addressE, address=address[0..5], out=four);
    RAM64(in=in[0..15], load=addressF, address=address[0..5], out=five);
    RAM64(in=in[0..15], load=addressG, address=address[0..5], out=six);
    RAM64(in=in[0..15], load=addressH, address=address[0..5], out=seven);
    Mux8Way16(a=zero, b=one, c=two, d=three, e=four, f=five, g=six, h=seven, sel=address[6..8], out=out[0..15]);
}